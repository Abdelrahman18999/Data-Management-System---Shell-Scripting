#!/bin/bash
#!/bin/bash

		echo -e "List of Tables:"
		counter=1
		for file in *; do
		    if [ -f "$file" ] && [[ ! "$file" =~ _metadata$ ]]; then
			echo -e "${COLOR_GREEN} $counter. $file ${COLOR_RESET}"
			((counter++))
		    fi
		done
while true; do
    read -p "Enter table name: " table

		    if [[ -f "$table" ]]; then
			#cd "DataDictionary"
			metadata_table="${table}_metadata"
			number_of_fields=$(awk -F: 'NR==1 {print NF}' "$metadata_table")
			# echo -e "$number_of_fields"

			select sub_operation in "Delete by column" "Delete by Value" "Back to operations"; do
         			case $REPLY in
					1)
						awk -F: 'NR==1 {for(i=1; i<=NF; i++) print i, $i}' "$metadata_table"
		    				read -p "Here are your columns, Please choose column number: " column_number
						column_name=$(awk -F: -v var="$column_number" 'NR==1 {print $var}' "$metadata_table")
						echo -e "The choosen column is : $column_number"

						# Update the metadata_table to remove the chosen column
						    awk -F: -v col_num="$column_number" '{
							for (i = 1; i <= NF; i++) {
							    if (i != col_num) {
								printf "%s%s", $i, (i < NF ? ":" : "\n");
							    }
							}
						    }' "$metadata_table" > "$metadata_table.tmp"

						    mv "$metadata_table.tmp" "$metadata_table"

						    echo -e "Column $column_number has been deleted from $metadata_table\n"

						# Update the actual table to remove the chosen column
						cd ..
						    awk -F: -v col_num="$column_number" '{
							for (i = 1; i <= NF; i++) {
							    if (i != col_num) {
								printf "%s%s", $i, (i < NF ? ":" : "\n");
							    }
							}
						    }' "$table" > "$table.tmp"

						    mv "$table.tmp" "$table"

						    echo -e "Column $column_number has been deleted from $table\n"


						break ;;

					2)
						#awk -F: 'NR==1 {for(i=1; i<=NF; i++) print i, $i}' "$metadata_table"
						PK_index=$(awk -F':' 'NR==3 {for(i=1; i<=NF; i++) if($i=="pk") print i}' "$metadata_table")
						PK_column_name=$(awk -F: -v var="$PK_index" 'NR==1 {print $var}' "$metadata_table")

						#read -p "Choose the column number to delete from: " column_number1	
						#Target_column=$(awk -F: -v var="$column_number1" 'NR==1 {print $var}' "$metadata_table")
						PK_datatype=$(awk -F: -v var="$column_number" 'NR==2 {print $var}' "$metadata_table")
						#echo -e "PK indx = $PK_index, and its name is: $PK_column_name\nThe target column: $Target_column"
						#cd ..
						while true; do 

						    read -p "where [PK] $PK_column_name = " match_value
						    if [[ "$PK_datatype" == "string" && ! "$value" =~ ^[a-zA-Z][a-zA-Z0-9]*$ ]]; then
                  				  echo "Please enter a $datatype value free of special characters, spaces and not begin with numbers!"
						    continue 
						# Check if datatype is integer
						    elif [[ "$PK_datatype" == "int" && ! "$match_value" =~ ^[0-9]*$ ]]; then
							    echo "Please enter a $PK_datatype value free of special characters and spaces !"
							    continue	
							fi
						
						flag1=$(awk -F: -v col_num="$PK_index" -v search_value="$match_value" '
						    BEGIN {
							flag="false"
						    }
						    {
							if ($col_num == search_value) {
							    flag="true"
							    exit
							}
						    }
						    END {
							print flag
						    }' "$table")
						echo "$flag1"

						if [[ "$flag1" == "false" ]]; then
						echo " this value is not exist,Please renter "
						continue
						else 
							awk -F: -v col_num="$PK_index" -v col_value="$match_value" '{
							    if ($col_num != col_value) {
								print $0;
							    }
							}' "$table" > "$table.tmp"

							mv "$table.tmp" "$table"

							echo -e "Row where column $column_number is $match_value have been deleted from $table\n"
							break

						fi
						    done 

						break ;;
					3)
						break
						;;


					*)
						echo "Others";;
				esac
				done
		   else
			echo "Table does not exist"
		
		    fi 
		break
		done
