#!/usr/bin/bash

echo -e "List of Tables:"
counter=1
for file in *; do
    if [ -f "$file" ] && [[ ! "$file" =~ _metadata$ ]]; then
        echo -e "$counter. $file "
        ((counter++))
    fi
done



# Main loop to get user input for the table name
while true; do
    read -p "Enter table name: " table
    valid_values=()
    if [[ -f "$table" ]]; then
        metadata_table="${table}_metadata"
        number_of_fields=$(awk -F: 'NR==1 {print NF}' "$metadata_table")
        Columns=$(awk -F: 'NR==1 {print $0}' "$metadata_table")

        # Loop over fields in the metadata file
        for ((i=1; i<=$number_of_fields; i++)); do
            column_name=$(awk -F: -v var="$i" 'NR==1 {print $var}' "$metadata_table")
            datatype=$(awk -F: -v var="$i" 'NR==2 {print $var}' "$metadata_table")
            constraint=$(awk -F: -v var="$i" 'NR==3 {print $var}' "$metadata_table")

            # Loop to get user input for the column values
            while true; do
                read -p "Please enter $column_name [$datatype] [$constraint]: " value



                # Check if constraint is notnull
                if [[ "$constraint" == "notnull" && -z "$value" ]]; then
                    echo "Error: $column_name cannot be null."
                    continue  # Continue the loop to get correct input
                fi
                
		# Check if datatype is string
                if [[ "$datatype" == "string" && ! "$value" =~ ^[a-zA-Z][a-zA-Z0-9]*$ ]]; then
                    echo "Please enter a $datatype value free of special characters, spaces and not begin with numbers!"
                    continue 
                # Check if datatype is integer
                elif [[ "$datatype" == "int" && ! "$value" =~ ^[0-9]*$ ]]; then
                    echo "Please enter a $datatype value free of special characters and spaces !"
                    continue 	

                fi


		if [[ "$constraint" == "unique" ]]; then
		    # Use awk to check if the value already exists in the data file
		    flag=$(awk -F: -v col_num="$i" -v search_value="$value" '
		    BEGIN {
			flag="true"
		    }
		    {
			if ($col_num == search_value) {
			    flag="false"
			    exit
			}
		    }
		    END {
			print flag
		    }' "$table")

		    if [ "$flag" == true ]; then
			#echo "$column_name is a valid unique."
			break  # Break out of the loop as the value is correct
		    else
			echo "Error: $column_name must be unique, and the provided value already exists."
			continue  # Continue the loop to get the correct input
		    fi
		fi


                # Check if constraint is primary key
                if [[ "$constraint" == "pk" ]]; then
                    # Use awk to check if the value already exists in the data file
                    flag=$(awk -F: -v col_num="$i" -v search_value="$value" '
                    BEGIN {
                        flag="true"
                    }
                    {
                        if ($col_num == search_value) {
                            flag="false"
                            exit
                        }
                    }
                    END {
                        print flag
                    }' "$table")


		if [[ "$value" == "" ]]; then
		    echo "Error: $column_name cannot be null. Primary key must have a value."
		    continue  # Continue the loop to get correct input
		else
		    if [ "$flag" == true ]; then
			#echo "$column_name is a valid primary key."
			break  # Break out of the loop as the value is correct
		    else
			echo "Error: $column_name must be unique, and the provided value already exists."
			continue  # Continue the loop to get correct input
		    fi
		fi

                fi

                break  # Break out of the loop if both datatype and constraints are satisfied
            done
	valid_values+=("$value")
        done
	echo "${valid_values[*]}" | tr ' ' ':' >> "$table"
	echo "You data inserted into $table tables succesfully"
	break	
    else
        echo "Table not exist"
	continue
    fi
done
